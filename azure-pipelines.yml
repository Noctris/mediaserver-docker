# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master develop

pool:
  name: 'home-lab-build-docker'

steps:
- bash: echo TRAEFIK_NETWORK=proxy >> $(Build.StagingDirectory)/environment.env
- bash: echo TRAEFIK_ENTRY_POINT=$(TRAEFIK_ENTRY_POINT) >> $(Build.StagingDirectory)/environment.env
- bash: echo TRAEFIK_ENTRY_POINT_PORT=$(TRAEFIK_ENTRY_POINT_PORT) >> $(Build.StagingDirectory)/environment.env
- bash: echo TZ=Europe/Brussels >> $(Build.StagingDirectory)/environment.env
- bash: echo DOMAIN_NAME=$(VS_DOMAIN_NAME) >> $(Build.StagingDirectory)/environment.env
- bash: echo DOCKER_VOL_MOUNT=$(DOCKER_VOL_MOUNT) >> $(Build.StagingDirectory)/environment.env
- bash: echo PATH_P_TV_SHOWS=$(PATH_P_TV_SHOWS) >> $(Build.StagingDirectory)/environment.env
- bash: echo PATH_P_MOVIES=$(PATH_P_MOVIES) >> $(Build.StagingDirectory)/environment.env
- bash: echo PATH_DOWNLOADS=$(PATH_DOWNLOADS) >> $(Build.StagingDirectory)/environment.env
- bash: echo PATH_LYCHEE=$(PATH_LYCHEE) >> $(Build.StagingDirectory)/environment.env
- bash: echo ACME_MAIL=$(ACME_MAIL) >> $(Build.StagingDirectory)/environment.env
- bash: echo PLEX_CLAIM=$(PLEX_CLAIM) >> $(Build.StagingDirectory)/environment.env
- bash: echo COMPOSE_PROJECT_NAME=frankenstack >> $(Build.StagingDirectory)/environment.env
- bash: cat $(Build.StagingDirectory)/environment.env
- bash: cd $(Build.StagingDirectory)
- bash: pwd
- bash: sh compose.sh