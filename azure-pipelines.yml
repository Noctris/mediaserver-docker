# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master develop

pool:
  name: 'home-lab-build-docker'
steps:
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: |
      TRAEFIK_ENTRY_POINT=${TRAEFIK_ENTRY_POINT}
      TRAEFIK_ENTRY_POINT_PORT=${TRAEFIK_ENTRY_POINT_PORT}
      TZ=Europe/Brussels
      DOMAIN_NAME=${VS_DOMAIN_NAME}
      DOCKER_VOL_MOUNT=${DOCKER_VOL_MOUNT}
      PATH_P_TV_SHOWS=${PATH_P_TV_SHOWS}
      PATH_P_MOVIES=${PATH_P_MOVIES}
      PATH_DOWNLOADS=${PATH_DOWNLOADS}
      PATH_LYCHEE=${PATH_LYCHEE}
    action: 'Combine configuration'
    outputDockerComposeFile: '$(Build.StagingDirectory)/docker-compose.yml'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: |
      TRAEFIK_ENTRY_POINT=${TRAEFIK_ENTRY_POINT}
      TRAEFIK_ENTRY_POINT_PORT=${TRAEFIK_ENTRY_POINT_PORT}
      TZ=Europe/Brussels
      DOMAIN_NAME=${VS_DOMAIN_NAME}
      DOCKER_VOL_MOUNT=${DOCKER_VOL_MOUNT}
      PATH_P_TV_SHOWS=${PATH_P_TV_SHOWS}
      PATH_P_MOVIES=${PATH_P_MOVIES}
      PATH_DOWNLOADS=${PATH_DOWNLOADS}
      PATH_LYCHEE=${PATH_LYCHEE}
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'config'
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose.yml'
    dockerComposeFileArgs: |
      TRAEFIK_ENTRY_POINT=${TRAEFIK_ENTRY_POINT}
      TRAEFIK_ENTRY_POINT_PORT=${TRAEFIK_ENTRY_POINT_PORT}
      TZ=Europe/Brussels
      DOMAIN_NAME=${VS_DOMAIN_NAME}
      DOCKER_VOL_MOUNT=${DOCKER_VOL_MOUNT}
      PATH_P_TV_SHOWS=${PATH_P_TV_SHOWS}
      PATH_P_MOVIES=${PATH_P_MOVIES}
      PATH_DOWNLOADS=${PATH_DOWNLOADS}
      PATH_LYCHEE=${PATH_LYCHEE}
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'docker-media-server'
    publishLocation: 'pipeline'


    
