version: "3.3"

services:

  #First setup a reverse proxy to access everything that is running
  traefik:
    image: "traefik:latest"
    restart: always
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  # Management Platform Portainer to manage docker stuff
  portainer:
    image: portainer/portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.lab.vanhoof.me`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name 
      # This is not necessary if you set your default network in Traefik config/parameters
      #- "traefik.docker.network=dmz"

  # TV Show Tool
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
      - UMASK_SET=022 #optional
    volumes:
      - /mnt/dockervol/sonarr2:/config
      - /mnt/pmedia/Tv Shows:/tv
      - /mnt/downloads:/downloads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`sonarr.lab.vanhoof.me`)"
      - "traefik.http.routers.whoami.entrypoints=web"
      #- "traefik.docker.network=mediaserverdocker_dmz"
    restart: unless-stopped

volumes:
  portainer_data:
    #name: "portainer_data"
    driver: "local"
    driver_opts:
      #Mountpoint: "/mnt/dockervol/portainer_data/_data"
      type: "nfs"
      o: "addr=10.32.1.3,nolock,soft,rw"
      #device: ":/mnt/jet/jet-lab-docker"
      device: ":/mnt/tank/system/dockervol/portainer"

networks:
  dmz:
    driver: bridge
  backend:
    driver: bridge   