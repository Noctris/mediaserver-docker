version: "3.3"

services:

  #First setup a reverse proxy to access everything that is running
  traefik:
    image: "traefik:latest"
    restart: always
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.${TRAEFIK_ENTRY_POINT}.address=:${TRAEFIK_ENTRY_POINT_PORT}"
    ports:
      - "8080:8080"
      - "80:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.entrypoints=${TRAEFIK_ENTRY_POINT}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  # Management Platform Portainer to manage docker stuff
  portainer:
    image: portainer/portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DOCKER_VOL_MOUNT}/portainer:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)"
      - "traefik.http.routers.portainer.entrypoints=${TRAEFIK_ENTRY_POINT}"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name 
      # This is not necessary if you set your default network in Traefik config/parameters
      #- "traefik.docker.network=dmz"

  # TV Show Tool
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
      #- UMASK_SET=022 #optional
    volumes:
      - "${DOCKER_VOL_MOUNT}/sonarr:/config"
      - "${PATH_P_TV_SHOWS}:/tv"
      - "${PATH_DOWNLOADS}:/downloads"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sonarr.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    #depends_on:
     # - nzbget
    volumes:
      - "${DOCKER_VOL_MOUNT}/radarr:/config"
      - "${PATH_DOWNLOADS}:/downloads"
      - "${PATH_P_MOVIES}:/movies"
    environment:
      - TZ="${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.radarr.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped


    
    # Some more fun tools
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    #depends_on:
    # - nzbget
    volumes:
      - "${DOCKER_VOL_MOUNT}/heimdall:/config"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.${DOMAIN_NAME}`)"
      - "traefik.http.routers.heimdall.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped