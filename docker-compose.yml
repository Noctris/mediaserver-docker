version: "3.3"

services:

  #First setup a reverse proxy to access everything that is running
  traefik:
    image: "traefik:latest"
    restart: always
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      #- "--api.entryPoing=admin"
      #- "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.webSecure.address=:443"
      #- "--entrypoints.https.tls"
      #- "--entrypoints.admin.address=8080"
      - "--certificatesResolvers.myresolver.acme.email=${ACME_MAIL}"
      - "--certificatesResolvers.myresolver.acme.storage=acme.json"
#      - "--certificatesResolvers.myresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.myresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.myresolver.acme.httpChallenge=true"
      # - "--certificatesResolvers.myresolver.acme.entryPoint=webSecure"
      # - "--certificatesResolvers.myresolver.acme.domains.main=${DOMAIN_NAME}"
      - "--certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
      # - "--certificatesResolvers.myresolver.acme.onHostRule=true"
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    labels:
      #Need to check this. Api not workingy yet
      - "traefik.enable=true"
      - "traefik.http.routers.traefikapi.service=api@internal"
      - "traefik.http.routers.traefikapi.rule=Host(`api.traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefikapi.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.entrypoints=${TRAEFIK_ENTRY_POINT}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
     # - "${DOCKER_VOL_MOUNT}/traefik/trafik.toml:/traefik.toml"
      - "${DOCKER_VOL_MOUNT}/traefik/acme.json:/acme.json"
  # nginx_proxy_manager:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   container_name: "nginx_proxy_manager"
  #   labels:
  #     #Need to check this. Api not workingy yet
  #     - "traefik.enable=true"
  #     - "traefik.http.services.nginx_proxy_manager.loadbalancer.server.port=81"
  #     - "traefik.http.routers.nginx_proxy_manager.rule=Host(`nginx.${DOMAIN_NAME}`)"
  #     - "traefik.http.routers.nginx_proxy_manager.entrypoints=${TRAEFIK_ENTRY_POINT}"
  #   volumes:
  #     - ${DOCKER_VOL_MOUNT}/nginx_proxy_manager/config.json:/app/config/production.json
  #     - ${DOCKER_VOL_MOUNT}/nginx_proxy_manager/data:/data
  #     - ${DOCKER_VOL_MOUNT}/letsencrypt_data:/etc/letsencrypt

  # nginx_proxy_manager_db:
  #   container_name: "nginx_proxy_manager_db"
  #   image: 'jc21/mariadb-aria:10.4'
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'npm'
  #     MYSQL_DATABASE: 'npm'
  #     MYSQL_USER: 'npm'
  #     MYSQL_PASSWORD: 'npm'
  #   volumes:
  #     - ${DOCKER_VOL_MOUNT}/nginx_proxy_manager_db/data/mysql:/var/lib/mysql    
  # Management Platform Portainer to manage docker stuff
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DOCKER_VOL_MOUNT}/portainer:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.entrypoints=webSecure"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name 
      # This is not necessary if you set your default network in Traefik config/parameters
      #- "traefik.docker.network=dmz"

  # TV Show Tool
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
      #- UMASK_SET=022 #optional
    volumes:
      - "${DOCKER_VOL_MOUNT}/sonarr:/config"
      - "${PATH_P_TV_SHOWS}:/tv"
      - "${PATH_DOWNLOADS}:/downloads"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.sonarr.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    #depends_on:
     # - nzbget
    volumes:
      - "${DOCKER_VOL_MOUNT}/radarr:/config"
      - "${PATH_DOWNLOADS}:/downloads"
      - "${PATH_P_MOVIES}:/movies"
    environment:
      - TZ="${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN_NAME}`)"
      - "traefik.http.routers.radarr.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped



    
  #Picture time!
  lychee:
    image: linuxserver/lychee
    container_name: lychee
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
    volumes:
      - "${DOCKER_VOL_MOUNT}/lychee:/config"
      - "${PATH_LYCHEE}:/pictures"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lychee.rule=Host(`lychee.${DOMAIN_NAME}`)"
      - "traefik.http.routers.lychee.entrypoints=${TRAEFIK_ENTRY_POINT}"
    restart: unless-stopped

  # Some more fun tools
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    #depends_on:
    # - nzbget
    volumes:
      - "${DOCKER_VOL_MOUNT}/heimdall:/config"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.${DOMAIN_NAME}`)"
      - "traefik.http.routers.heimdall.entrypoints=${TRAEFIK_ENTRY_POINT}"
      - "traefik.http.routers.heimdall.entrypoints=webSecure"
      - "traefik.http.routers.heimdall.tls=true"
      - "traefik.http.routers.heimdall.tls.certresolver=myresolver"
    restart: unless-stopped

  # gitlab:
  #   image: gitlab/gitlab-ce:latest
  #   container_name: gitlab
  #   #restart: always
  #   hostname: "gitlab.{DOMAIN_NAME}"
  #   environment: 
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url 'http://gitlab.${DOMAIN_NAME}:80'
  #       gitlab_rails['gitlab_shell_ssh_port'] = 
  #   ports:
  #     - '2224:22'
  #   volumes:
  #     - "${DOCKER_VOL_MOUNT}/gitlab/config:/etc/gitlab"
  #     - "${DOCKER_VOL_MOUNT}/gitlab/logs:/var/logs/gitlab"
  #     - "${DOCKER_VOL_MOUNT}/gitlab/data:/var/opt/gitlab"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.gitlab.rule=Host(`gitlab.${DOMAIN_NAME}`)"
  #     - "traefik.http.routers.gitlab.entrypoints=${TRAEFIK_ENTRY_POINT}"
  #     - "traefik.http.services.gitlab.loadbalancer.server.port=80"