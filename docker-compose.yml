version: "3.3"

services:

  #First setup a reverse proxy to access everything that is running
  traefik:
    image: "traefik:latest"
    restart: always
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      #- "--api.entryPoing=admin"
      #- "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.webSecure.address=:443"
      #- "--entrypoints.webSecure.tls=true"
      #- "--entrypoints.admin.address=8080"
      - "--certificatesResolvers.myresolver.acme.email=${ACME_MAIL}"
      - "--certificatesResolvers.myresolver.acme.storage=acme.json"
#      - "--certificatesResolvers.myresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.myresolver.acme.caServer=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.myresolver.acme.httpChallenge=true"
      # - "--certificatesResolvers.myresolver.acme.entryPoint=webSecure"
      # - "--certificatesResolvers.myresolver.acme.domains.main=${DOMAIN_NAME}"
      - "--certificatesResolvers.myresolver.acme.httpChallenge.entryPoint=web"
      # - "--certificatesResolvers.myresolver.acme.onHostRule=true"
    ports:
      - "8080:8080"
      - "80:80"
      - "443:443"
    labels:
      #Need to check this. Api not workingy yet
      - "traefik.enable=true"
      - "traefik.http.routers.traefikapi.service=api@internal"
      - "traefik.http.routers.traefikapi.rule=Host(`api.traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefikapi.entrypoints=web"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.traefik-secure.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=sonarr-secure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.middlewares.traefik.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik-secure.entrypoints=webSecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
     # - "${DOCKER_VOL_MOUNT}/traefik/trafik.toml:/traefik.toml"
      - "${DOCKER_VOL_MOUNT}/traefik/acme.json:/acme.json"

  # Management Platform Portainer to manage docker stuff
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${DOCKER_VOL_MOUNT}/portainer:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.portainer-secure.redirectscheme.scheme=https"
      - "traefik.http.routers.portainer.middlewares=portainer-secure"
      - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.middlewares.portainer.redirectscheme.scheme=https"
      #- "traefik.http.routers.portainer.entrypoints.web.redirect=entryPoint=webSecure"
      #- "traefik.http.routers.portainer.entrypoints=webSecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.${DOMAIN_NAME}`)"
      - "traefik.http.routers.portainer-secure.entrypoints=webSecure"
      - "traefik.http.routers.portainer-secure.tls=true"
      - "traefik.http.routers.portainer-secure.tls.certresolver=myresolver"
      # Uncomment this label if your Traefik instance is using a specific Docker network and replace the network name 
      # This is not necessary if you set your default network in Traefik config/parameters
      #- "traefik.docker.network=dmz"

  # Heimdall Dashboard
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    #depends_on:
    # - nzbget
    volumes:
      - "${DOCKER_VOL_MOUNT}/heimdall:/config"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ="${TZ}"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.heimdall-secure.redirectscheme.scheme=https"
      - "traefik.http.routers.heimdall.middlewares=heimdall-secure"
      - "traefik.http.routers.heimdall.rule=Host(`dash.${DOMAIN_NAME}`)"
      - "traefik.http.routers.heimdall.entrypoints=web"
      - "traefik.http.middlewares.heimdall.redirectscheme.scheme=https"
      - "traefik.http.routers.heimdall-secure.rule=Host(`dash.${DOMAIN_NAME}`)"
      - "traefik.http.routers.heimdall-secure.entrypoints=webSecure"
      - "traefik.http.routers.heimdall-secure.tls=true"
      - "traefik.http.routers.heimdall-secure.tls.certresolver=myresolver"
    restart: unless-stopped

  # Media Services
  plexmediaserver:
    image: plexinc/pms-docker
    container_name: plexmediaserver
    #network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - UMASK_SET=022 #optional
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ADVERTISE_IP=http://10.32.4.10:32400
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    volumes:
      - "${DOCKER_VOL_MOUNT}/plexmediaserver:/config"
      - "${PATH_P_TV_SHOWS}:/tv"
      - "${PATH_P_MOVIES}:/movies"
    labels:
      - "traefik.enable=true"
      - "traefik.port=32400"
      #- "traefik.http.middlewares.plex-secure.redirectscheme.scheme=https"
      #- "traefik.http.routers.plex.middlewares=plex-secure"
      - "traefik.http.routers.plex.rule=Host(`plex.${DOMAIN_NAME}`)"
      - "traefik.http.routers.plex.entrypoints=web"
  #    - "traefik.http.middlewares.plex.redirectscheme.scheme=https"
      - "traefik.http.routers.plex-secure.rule=Host(`plex.${DOMAIN_NAME}`)"
      - "traefik.http.routers.plex-secure.entrypoints=webSecure"
      - "traefik.http.routers.plex-secure.tls=true"
      - "traefik.http.routers.plex-secure.tls.certresolver=myresolver"
    restart: unless-stopped


volumes:
  parent-media:
    driver: local
    driver_opts:
      type: nfs4
      o: "addr=10.32.1.3,rw,noatime,rsize=8192,wsize=8192,tcp,timeo=14"
      device: /mnt/tank/media/parents
